package utils;


public enum Instances {
    iv500(new int[]{1, 2, 3, 4, 5, 6}, 2, 66,500),//dans c66
    iv672_1(new int[]{4, 14, 19, 27, 39, 41, 48, 50, 56, 58, 67, 80}, 2,66,672), // 1+ x2 + x26 dans c66
    iv672_2(new int[]{3, 6, 8, 11, 15, 25, 28, 40, 50, 57, 58, 62}, 2,66,672), // 1+x15 dans c66
    iv672_3(new int[]{5, 10, 11, 16, 22, 25, 33, 37, 38, 49, 53, 74}, 2,111,672), // x20 dans c111
    iv672_4(new int[]{4, 6, 15, 17, 19, 21, 34, 57, 58, 66, 74, 76}, 2,66,672), //1+x25 dans c66
    iv672_5(new int[]{5, 11, 16, 22, 25, 29, 33, 49, 50, 65, 72, 74}, 2,66,672), // x33 dans c66
    iv672_6(new int[]{4, 15, 17, 19, 21, 24, 33, 47, 57, 58, 66, 74}, 2,66,672), // x45 + x63 dans c66
    iv675_1b(new int[]{3, 14, 21, 25, 38, 43, 44, 47, 54, 56, 58, 68}, 1,84,675), // 1+ x1 + x10 + x51  (1+x1+x10 dans b84 et x51 dans c66)
    iv675_1c(new int[]{3, 14, 21, 25, 38, 43, 44, 47, 54, 56, 58, 68}, 2,66,675), // 1+ x1 + x10 + x51  (1+x1+x10 dans b84 et x51 dans c66)
    iv675_2(new int[]{2, 4, 7, 8, 13, 19, 23, 39, 48, 59, 68, 75}, 1,84,675), //x8 dans b84
    iv675_3(new int[]{2, 7, 8, 13, 19, 22, 30, 34, 35, 46, 50, 71}, 2,111,675), // x17 dans c111
    iv675_4(new int[]{12, 17, 21, 23, 36, 44, 47, 52, 56, 59, 63, 64}, 2,66,675), // 1 + x21 + x51 dans c66
    iv735_1(new int[]{2, 5, 9, 12, 13, 14, 19, 28, 36, 38, 40, 47, 49, 51, 52, 53, 55, 57, 63, 64, 66, 73, 79},0,66,735), //1 + x1 dans a66  me:2 solutions 23 sec
    iv735_2(new int[]{3, 4, 6, 9, 16, 17, 23, 27, 29, 38, 41, 46, 51, 56, 62, 63, 65, 66, 71, 72, 75, 78, 80}, 2,66,735), //x5 me: a66 nothing(16). c66:27673 solutions 994sec.
    iv735_3(new int[]{5, 8, 12, 13, 15, 18, 19, 23, 25, 31, 34, 38, 39, 41, 51, 53, 64, 65, 67, 71, 73, 75, 78}, 0,66,735), //x9 dans a66 me:3 solutions, 18secondes.
    ;


    public final int[] iv;
    public final int nAct;
    public final int registerOutputBit;
    public final int positionOutputBit;
    public final int nbRound;

    public boolean contains(int ivIdx){
        for(int i:iv){
            if (i==ivIdx) return true;
        }
        return false;
    }
    Instances(int[] iv, int nAct) {
        this.iv = iv;
        this.nAct = nAct;
        assert(iv.length == nAct);
        registerOutputBit = 2;
        positionOutputBit = 66;
        nbRound =672;
    }
    Instances(int[] iv, int registerOutputBit, int positionOutputBit, int nbRound) {
        this.iv = iv;
        this.nAct = iv.length;
        this.registerOutputBit = registerOutputBit;
        this.positionOutputBit = positionOutputBit;
        this.nbRound =nbRound;
    }

}

// OLD version. (from Arthur Gontier)
//   iv_100(new int[]{}, 0),
//       iv_500(new int[]{1, 2, 3, 4, 5, 6}, 6),//dans c66
//       iv_570(new int[]{1, 11, 21, 31, 41, 51, 61}, 7),
//       iv_590(new int[]{1, 11, 21, 31, 41, 51, 61, 71}, 8),
//       iv_591(new int[]{1, 11, 21, 31, 41, 51, 61, 71}, 8),

//       iv_672_1(new int[]{4, 14, 19, 27, 39, 41, 48, 50, 56, 58, 67, 80}, 12), // 1+ x2 + x26 dans c66
//       iv_672_2(new int[]{3, 6, 8, 11, 15, 25, 28, 40, 50, 57, 58, 62}, 12), // 1+x15 dans c66
//       iv_672_3(new int[]{5, 10, 11, 16, 22, 25, 33, 37, 38, 49, 53, 74}, 12), // x20 dans c111
//       iv_672_4(new int[]{4, 6, 15, 17, 19, 21, 34, 57, 58, 66, 74, 76}, 12), //1+x25 dans c66
//       iv_672_5(new int[]{5, 11, 16, 22, 25, 29, 33, 49, 50, 65, 72, 74}, 12), // x33 dans c66
//       iv_672_6(new int[]{4, 15, 17, 19, 21, 24, 33, 47, 57, 58, 66, 74}, 12), // x45 + x63 dans c66

//       iv_675_1(new int[]{3, 14, 21, 25, 38, 43, 44, 47, 54, 56, 58, 68}, 12), // 1+ x1 + x10 + x51  (1+x1+x10 dans b84 et x51 dans c66)
//       iv_675_2(new int[]{2, 4, 7, 8, 13, 19, 23, 39, 48, 59, 68, 75}, 12), //x8 dans b84
//       iv_675_3(new int[]{2, 7, 8, 13, 19, 22, 30, 34, 35, 46, 50, 71}, 12), // x17 dans c111
//       iv_675_4(new int[]{12, 17, 21, 23, 36, 44, 47, 52, 56, 59, 63, 64}, 12), // 1 + x21 + x51 dans c66

//       iv_681_1(new int[]{6, 8, 11, 14, 16, 18, 29, 41, 48, 74, 77, 80}, 12), // x61
//       iv_685_1(new int[]{1, 3, 10, 12, 14, 38, 45, 48, 50, 69, 75, 79}, 12), // x16

//       iv_735_1(new int[]{2, 5, 9, 12, 13, 14, 19, 28, 36, 38, 40, 47, 49, 51, 52, 53, 55, 57, 63, 64, 66, 73, 79}, 23), //1 + x1 dans a66
//       iv_735_2(new int[]{3, 4, 6, 9, 16, 17, 23, 27, 29, 38, 41, 46, 51, 56, 62, 63, 65, 66, 71, 72, 75, 78, 80}, 23), //x5
//       iv_735_3(new int[]{5, 8, 12, 13, 15, 18, 19, 23, 25, 31, 34, 38, 39, 41, 51, 53, 64, 65, 67, 71, 73, 75, 78}, 23), //x9 dans a66


//       iv_840_1(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
//       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,/*34,*/35, 36, 37, 38, 39,
//       40, 41, 42, 43, 44, 45, 46,/*47,*/48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
//       60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}, 78),
//       iv_840_2(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
//       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,/*34,*/35, 36, 37, 38, 39,
//       40, 41, 42, 43, 44, 45, 46,/*47,*/48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
//       60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, /*71,*/ 72, /*73,*/ 74, /*75,*/ 76, /*77,*/ 78, /*79,*/ 80}, 78),
//       iv_840_3(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
//       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
//       40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
//       60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, /*73,*/ 74, /*75,*/ 76, /*77,*/ 78, /*79,*/ 80}, 78),
